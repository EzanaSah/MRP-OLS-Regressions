1, 0)
mydata$lastmin4 = ifelse(lastmin==4, 1, 0)
mydata$lastmin5 = ifelse(lastmin==5, 1, 0)
mydata$momeduc2 = ifelse(momeduc==2, 1, 0)
mydata$momeduc3 = ifelse(momeduc==3, 1, 0)
mydata$momeduc4 = ifelse(momeduc==4, 1, 0)
mydata$momeduc5 = ifelse(momeduc==5, 1, 0)
mydata$momeduc6 = ifelse(momeduc==6, 1, 0)
mydata$momeduc7 = ifelse(momeduc==7, 1, 0)
mydata$momeduc8 = ifelse(momeduc==8, 1, 0)
mydata$momeduc9 = ifelse(momeduc==9, 1, 0)
mydata$dadeduc2 = ifelse(dadeduc==2, 1, 0)
mydata$dadeduc3 = ifelse(dadeduc==3, 1, 0)
mydata$dadeduc4 = ifelse(dadeduc==4, 1, 0)
mydata$dadeduc5 = ifelse(dadeduc==5, 1, 0)
mydata$dadeduc6 = ifelse(dadeduc==6, 1, 0)
mydata$dadeduc7 = ifelse(dadeduc==7, 1, 0)
mydata$dadeduc8 = ifelse(dadeduc==8, 1, 0)
mydata$dadeduc9 = ifelse(dadeduc==9, 1, 0)
attach(mydata)
# Z is a vector of control variables for the ith student
Z <- cbind(year, numcourses, language2, language3, hsgpa2,
hsgpa3, lastmin2, lastmin3, lastmin4, lastmin5,
momeduc2, momeduc3, momeduc4, momeduc5, momeduc6,
momeduc7, momeduc8, momeduc9, dadeduc2, dadeduc3,
dadeduc4, dadeduc5, dadeduc6, dadeduc7, dadeduc8,
dadeduc9)
# X.assigned is all the gamma variables plus the instrument
X.assigned = cbind(1, Z, assigned)
# Y is our outcome variable which is GPA
y <- gpa
n = dim(Z)[1]
k = dim(X.assigned)[2]
# ------------------- QUESTION 1 -------------- #
# ------   STAGE 1   -------- #
stage1 <- lm(participated~0+X.assigned)
# get the fitted values and residuals from stage 1
participatedhat = fitted(stage1)
Vhat1 = resid(stage1)
instrumentcoef = stage1$coef[k]
# ------   STAGE 2   -------- #
# take the fitted values from stage 1 and
# regress those to get the fitted values for stage 2
Xhat = cbind(X.assigned[,-k],participatedhat)
stage2 <- lm(y~0+Xhat)
stage2fitted = fitted(stage2)
twoSLSdelta = stage2$coef[k]
# ------------------- QUESTION 2 -------------- #
XtX = t(Xhat) %*% Xhat
Bhat = 1/n * XtX # bread
Vhat2 = resid(stage2) # residuals
Mhat = matrix(0, k, k)
for (i in 1:n) {
Mhat = Mhat + Vhat2[i]^2 * Xhat[i,] %*% t(Xhat[i,])
}
Mhat = 1/n * Mhat  # meat
SIGMAhat = solve(Bhat) %*% Mhat %*% solve(Bhat) # HC estimate of covariance matrix
se = sqrt(diag(SIGMAhat)/n) # HC standard error
sedelta = se[k]
# ------------------- QUESTION 3 -------------- #
delta = 0
t = (twoSLSdelta-delta)/(sedelta) # t-stat for hypothesis test
pvalue = 2 * (1-pnorm(abs(t))) # p-value for hypothesis test
# ------------------- QUESTION 4 -------------- #
# 1. ---- unrestricted model ---- #
unrmodel = lm(y~0+Xhat)
Uhatunr = resid(unrmodel)
# 2. ------restricted model ----- #
rmodel = lm(y~0+Xhat[,-k]) # stage 1 OLS
YhatR = fitted(rmodel) # stage 1 fitted values of the rmodel
UhatR = resid(rmodel) # stage 1 residuals from the the rmodel
#bootstrapstage2 <- lm(y~0+Xhat[,-k]+participatedhatboot) # stage 2 OLS
#YhatR = fitted(bootstrapstage2) # stage 2 fitted values
#UhatR = resid(bootstrapstage2) # stage 2 residuals
# 3.& 4.  ----- Re-sampling ----- #
B=1999
tstar=rep(0:B)
for (b in B){
W=rbinom(n,1,p=0.5)
W[W==0]=-1
Vhat1star = W * Vhat1 # BS stage 1 resid
UhatRstar = W * UhatR # BS stage 2 resid
YstarR = YhatR + UhatRstar # BS GPA = stage 2 fitted + stage 2 resid
Xstarboot = cbind(1, Z, YhatR)
bootmodel = lm(YstarR~0+Xstarboot) # bootstrap sample
bootdeltahat = bootmodel$coefficients[k] # bootstrap estimate of delta
XtXboot = t(Xstarboot) %*% Xstarboot
Bhatboot = 1/n * XtXboot # bread
Mhatboot = matrix(0, k, k)
for (i in 1:n) {
Mhatboot = Mhatboot + UhatRstar[i]^2 * Xstarboot[i,] %*% t(Xstarboot[i,])
}
Mhatboot = 1/n * Mhatboot  # meat
SIGMAhatboot = solve(Bhatboot) %*% Mhatboot %*% solve(Bhatboot) # HC estimate of covariance matrix
seboot = sqrt(diag(SIGMAhatboot)/n) # HC standard error
sestardeltaboot = seboot[k]
tstar[b] = (bootdeltahat)/sestardeltaboot
}
gstar.t = 1/B * sum(tstar<=t)
pboot =  2 * min(gstar.t, 1-gstar.t)
rm(list=ls())
# Read and clean data
set.seed(500630172);index=sample(1:1542,size=1000)
mydata <- read.table("ALO.txt",header=TRUE)[index,]
mydata <- na.omit(mydata)
# Creating Dummy Variables for Categorical Variables
mydata$language2 = ifelse(language== 2, 1, 0)
mydata$language3 = ifelse(language== 3, 1, 0)
mydata$hsgpa2 = ifelse(hsgpa==2, 1, 0)
mydata$hsgpa3 = ifelse(hsgpa==3, 1, 0)
mydata$lastmin2 = ifelse(lastmin==2, 1, 0)
mydata$lastmin3 = ifelse(lastmin==3, 1, 0)
mydata$lastmin4 = ifelse(lastmin==4, 1, 0)
mydata$lastmin5 = ifelse(lastmin==5, 1, 0)
mydata$momeduc2 = ifelse(momeduc==2, 1, 0)
mydata$momeduc3 = ifelse(momeduc==3, 1, 0)
mydata$momeduc4 = ifelse(momeduc==4, 1, 0)
mydata$momeduc5 = ifelse(momeduc==5, 1, 0)
mydata$momeduc6 = ifelse(momeduc==6, 1, 0)
mydata$momeduc7 = ifelse(momeduc==7, 1, 0)
mydata$momeduc8 = ifelse(momeduc==8, 1, 0)
mydata$momeduc9 = ifelse(momeduc==9, 1, 0)
mydata$dadeduc2 = ifelse(dadeduc==2, 1, 0)
mydata$dadeduc3 = ifelse(dadeduc==3, 1, 0)
mydata$dadeduc4 = ifelse(dadeduc==4, 1, 0)
mydata$dadeduc5 = ifelse(dadeduc==5, 1, 0)
mydata$dadeduc6 = ifelse(dadeduc==6, 1, 0)
mydata$dadeduc7 = ifelse(dadeduc==7, 1, 0)
mydata$dadeduc8 = ifelse(dadeduc==8, 1, 0)
mydata$dadeduc9 = ifelse(dadeduc==9, 1, 0)
attach(mydata)
# Z is a vector of control variables for the ith student
Z <- cbind(year, numcourses, language2, language3, hsgpa2,
hsgpa3, lastmin2, lastmin3, lastmin4, lastmin5,
momeduc2, momeduc3, momeduc4, momeduc5, momeduc6,
momeduc7, momeduc8, momeduc9, dadeduc2, dadeduc3,
dadeduc4, dadeduc5, dadeduc6, dadeduc7, dadeduc8,
dadeduc9)
# X.assigned is all the gamma variables plus the instrument
X.assigned = cbind(1, Z, assigned)
# Y is our outcome variable which is GPA
y <- gpa
n = dim(Z)[1]
k = dim(X.assigned)[2]
# ------------------- QUESTION 1 -------------- #
# ------   STAGE 1   -------- #
stage1 <- lm(participated~0+X.assigned)
# get the fitted values and residuals from stage 1
participatedhat = fitted(stage1)
Vhat1 = resid(stage1)
instrumentcoef = stage1$coef[k]
# ------   STAGE 2   -------- #
# take the fitted values from stage 1 and
# regress those to get the fitted values for stage 2
Xhat = cbind(X.assigned[,-k],participatedhat)
stage2 <- lm(y~0+Xhat)
stage2fitted = fitted(stage2)
twoSLSdelta = stage2$coef[k]
# ------------------- QUESTION 2 -------------- #
XtX = t(Xhat) %*% Xhat
Bhat = 1/n * XtX # bread
Vhat2 = resid(stage2) # residuals
Mhat = matrix(0, k, k)
for (i in 1:n) {
Mhat = Mhat + Vhat2[i]^2 * Xhat[i,] %*% t(Xhat[i,])
}
Mhat = 1/n * Mhat  # meat
SIGMAhat = solve(Bhat) %*% Mhat %*% solve(Bhat) # HC estimate of covariance matrix
se = sqrt(diag(SIGMAhat)/n) # HC standard error
sedelta = se[k]
# ------------------- QUESTION 3 -------------- #
delta = 0
t = (twoSLSdelta-delta)/(sedelta) # t-stat for hypothesis test
pvalue = 2 * (1-pnorm(abs(t))) # p-value for hypothesis test
# ------------------- QUESTION 4 -------------- #
# 1. ---- unrestricted model ---- #
unrmodel = lm(y~0+Xhat)
Uhatunr = resid(unrmodel)
# 2. ------restricted model ----- #
rmodel = lm(y~0+Xhat[,-k]) # stage 1 OLS
YhatR = fitted(rmodel) # stage 1 fitted values of the rmodel
UhatR = resid(rmodel) # stage 1 residuals from the the rmodel
#bootstrapstage2 <- lm(y~0+Xhat[,-k]+participatedhatboot) # stage 2 OLS
#YhatR = fitted(bootstrapstage2) # stage 2 fitted values
#UhatR = resid(bootstrapstage2) # stage 2 residuals
# 3.& 4.  ----- Re-sampling ----- #
B=1999
tstar=rep(0:B)
for (b in B){
W=rbinom(n,1,p=0.5)
W[W==0]=-1
Vhat1star = W * Vhat1 # BS stage 1 resid
UhatRstar = W * UhatR # BS stage 2 resid
YstarR = YhatR + UhatRstar # BS GPA = stage 2 fitted + stage 2 resid
Xstarboot = cbind(1, Z, participatedhat, Vhat1star)
bootmodel = lm(YstarR~0+Xstarboot) # bootstrap sample
bootdeltahat = bootmodel$coefficients[k] # bootstrap estimate of delta
XtXboot = t(Xstarboot) %*% Xstarboot
Bhatboot = 1/n * XtXboot # bread
Mhatboot = matrix(0, k, k)
for (i in 1:n) {
Mhatboot = Mhatboot + UhatRstar[i]^2 * Xstarboot[i,] %*% t(Xstarboot[i,])
}
Mhatboot = 1/n * Mhatboot  # meat
SIGMAhatboot = solve(Bhatboot) %*% Mhatboot %*% solve(Bhatboot) # HC estimate of covariance matrix
seboot = sqrt(diag(SIGMAhatboot)/n) # HC standard error
sestardeltaboot = seboot[k]
tstar[b] = (bootdeltahat)/sestardeltaboot
}
gstar.t = 1/B * sum(tstar<=t)
pboot =  2 * min(gstar.t, 1-gstar.t)
rm(list=ls())
# Read and clean data
set.seed(500630172);index=sample(1:1542,size=1000)
mydata <- read.table("ALO.txt",header=TRUE)[index,]
mydata <- na.omit(mydata)
# Creating Dummy Variables for Categorical Variables
mydata$language2 = ifelse(language== 2, 1, 0)
mydata$language3 = ifelse(language== 3, 1, 0)
mydata$hsgpa2 = ifelse(hsgpa==2, 1, 0)
mydata$hsgpa3 = ifelse(hsgpa==3, 1, 0)
mydata$lastmin2 = ifelse(lastmin==2, 1, 0)
mydata$lastmin3 = ifelse(lastmin==3, 1, 0)
mydata$lastmin4 = ifelse(lastmin==4, 1, 0)
mydata$lastmin5 = ifelse(lastmin==5, 1, 0)
mydata$momeduc2 = ifelse(momeduc==2, 1, 0)
mydata$momeduc3 = ifelse(momeduc==3, 1, 0)
mydata$momeduc4 = ifelse(momeduc==4, 1, 0)
mydata$momeduc5 = ifelse(momeduc==5, 1, 0)
mydata$momeduc6 = ifelse(momeduc==6, 1, 0)
mydata$momeduc7 = ifelse(momeduc==7, 1, 0)
mydata$momeduc8 = ifelse(momeduc==8, 1, 0)
mydata$momeduc9 = ifelse(momeduc==9, 1, 0)
mydata$dadeduc2 = ifelse(dadeduc==2, 1, 0)
mydata$dadeduc3 = ifelse(dadeduc==3, 1, 0)
mydata$dadeduc4 = ifelse(dadeduc==4, 1, 0)
mydata$dadeduc5 = ifelse(dadeduc==5, 1, 0)
mydata$dadeduc6 = ifelse(dadeduc==6, 1, 0)
mydata$dadeduc7 = ifelse(dadeduc==7, 1, 0)
mydata$dadeduc8 = ifelse(dadeduc==8, 1, 0)
mydata$dadeduc9 = ifelse(dadeduc==9, 1, 0)
attach(mydata)
# Z is a vector of control variables for the ith student
Z <- cbind(year, numcourses, language2, language3, hsgpa2,
hsgpa3, lastmin2, lastmin3, lastmin4, lastmin5,
momeduc2, momeduc3, momeduc4, momeduc5, momeduc6,
momeduc7, momeduc8, momeduc9, dadeduc2, dadeduc3,
dadeduc4, dadeduc5, dadeduc6, dadeduc7, dadeduc8,
dadeduc9)
# X.assigned is all the gamma variables plus the instrument
X.assigned = cbind(1, Z, assigned)
# Y is our outcome variable which is GPA
y <- gpa
n = dim(Z)[1]
k = dim(X.assigned)[2]
# ------------------- QUESTION 1 -------------- #
# ------   STAGE 1   -------- #
stage1 <- lm(participated~0+X.assigned)
# get the fitted values and residuals from stage 1
participatedhat = fitted(stage1)
Vhat1 = resid(stage1)
instrumentcoef = stage1$coef[k]
# ------   STAGE 2   -------- #
# take the fitted values from stage 1 and
# regress those to get the fitted values for stage 2
Xhat = cbind(X.assigned[,-k],participatedhat)
stage2 <- lm(y~0+Xhat)
stage2fitted = fitted(stage2)
twoSLSdelta = stage2$coef[k]
# ------------------- QUESTION 2 -------------- #
XtX = t(Xhat) %*% Xhat
Bhat = 1/n * XtX # bread
Vhat2 = resid(stage2) # residuals
Mhat = matrix(0, k, k)
for (i in 1:n) {
Mhat = Mhat + Vhat2[i]^2 * Xhat[i,] %*% t(Xhat[i,])
}
Mhat = 1/n * Mhat  # meat
SIGMAhat = solve(Bhat) %*% Mhat %*% solve(Bhat) # HC estimate of covariance matrix
se = sqrt(diag(SIGMAhat)/n) # HC standard error
sedelta = se[k]
# ------------------- QUESTION 3 -------------- #
delta = 0
t = (twoSLSdelta-delta)/(sedelta) # t-stat for hypothesis test
pvalue = 2 * (1-pnorm(abs(t))) # p-value for hypothesis test
# ------------------- QUESTION 4 -------------- #
# 1. ---- unrestricted model ---- #
unrmodel = lm(y~0+Xhat)
Uhatunr = resid(unrmodel)
# 2. ------restricted model ----- #
rmodel = lm(y~0+Xhat[,-k]) # stage 1 OLS
YhatR = fitted(rmodel) # stage 1 fitted values of the rmodel
UhatR = resid(rmodel) # stage 1 residuals from the the rmodel
#bootstrapstage2 <- lm(y~0+Xhat[,-k]+participatedhatboot) # stage 2 OLS
#YhatR = fitted(bootstrapstage2) # stage 2 fitted values
#UhatR = resid(bootstrapstage2) # stage 2 residuals
# 3.& 4.  ----- Re-sampling ----- #
B=1999
tstar=rep(0:B)
for (b in B){
W=rbinom(n,1,p=0.5)
W[W==0]=-1
Vhat1star = W * Vhat1 # BS stage 1 resid
UhatRstar = W * UhatR # BS stage 2 resid
YstarR = YhatR + UhatRstar # BS GPA = stage 2 fitted + stage 2 resid
Xstarboot = cbind(1, Z, participatedhat)
bootmodel = lm(YstarR~0+Xstarboot+Vhat1star) # bootstrap sample
bootdeltahat = bootmodel$coefficients[k] # bootstrap estimate of delta
XtXboot = t(Xstarboot) %*% Xstarboot
Bhatboot = 1/n * XtXboot # bread
Mhatboot = matrix(0, k, k)
for (i in 1:n) {
Mhatboot = Mhatboot + UhatRstar[i]^2 * Xstarboot[i,] %*% t(Xstarboot[i,])
}
Mhatboot = 1/n * Mhatboot  # meat
SIGMAhatboot = solve(Bhatboot) %*% Mhatboot %*% solve(Bhatboot) # HC estimate of covariance matrix
seboot = sqrt(diag(SIGMAhatboot)/n) # HC standard error
sestardeltaboot = seboot[k]
tstar[b] = (bootdeltahat)/sestardeltaboot
}
gstar.t = 1/B * sum(tstar<=t)
pboot =  2 * min(gstar.t, 1-gstar.t)
View(SIGMAhat)
View(SIGMAhatboot)
se
seboot
tstar
rm(list=ls())
# Read and clean data
set.seed(500630172);index=sample(1:1542,size=1000)
mydata <- read.table("ALO.txt",header=TRUE)[index,]
mydata <- na.omit(mydata)
# Creating Dummy Variables for Categorical Variables
mydata$language2 = ifelse(language== 2, 1, 0)
mydata$language3 = ifelse(language== 3, 1, 0)
mydata$hsgpa2 = ifelse(hsgpa==2, 1, 0)
mydata$hsgpa3 = ifelse(hsgpa==3, 1, 0)
mydata$lastmin2 = ifelse(lastmin==2, 1, 0)
mydata$lastmin3 = ifelse(lastmin==3, 1, 0)
mydata$lastmin4 = ifelse(lastmin==4, 1, 0)
mydata$lastmin5 = ifelse(lastmin==5, 1, 0)
mydata$momeduc2 = ifelse(momeduc==2, 1, 0)
mydata$momeduc3 = ifelse(momeduc==3, 1, 0)
mydata$momeduc4 = ifelse(momeduc==4, 1, 0)
mydata$momeduc5 = ifelse(momeduc==5, 1, 0)
mydata$momeduc6 = ifelse(momeduc==6, 1, 0)
mydata$momeduc7 = ifelse(momeduc==7, 1, 0)
mydata$momeduc8 = ifelse(momeduc==8, 1, 0)
mydata$momeduc9 = ifelse(momeduc==9, 1, 0)
mydata$dadeduc2 = ifelse(dadeduc==2, 1, 0)
mydata$dadeduc3 = ifelse(dadeduc==3, 1, 0)
mydata$dadeduc4 = ifelse(dadeduc==4, 1, 0)
mydata$dadeduc5 = ifelse(dadeduc==5, 1, 0)
mydata$dadeduc6 = ifelse(dadeduc==6, 1, 0)
mydata$dadeduc7 = ifelse(dadeduc==7, 1, 0)
mydata$dadeduc8 = ifelse(dadeduc==8, 1, 0)
mydata$dadeduc9 = ifelse(dadeduc==9, 1, 0)
attach(mydata)
# Z is a vector of control variables for the ith student
Z <- cbind(year, numcourses, language2, language3, hsgpa2,
hsgpa3, lastmin2, lastmin3, lastmin4, lastmin5,
momeduc2, momeduc3, momeduc4, momeduc5, momeduc6,
momeduc7, momeduc8, momeduc9, dadeduc2, dadeduc3,
dadeduc4, dadeduc5, dadeduc6, dadeduc7, dadeduc8,
dadeduc9)
# X.assigned is all the gamma variables plus the instrument
X.assigned = cbind(1, Z, assigned)
# Y is our outcome variable which is GPA
y <- gpa
n = dim(Z)[1]
k = dim(X.assigned)[2]
# ------------------- QUESTION 1 -------------- #
# ------   STAGE 1   -------- #
stage1 <- lm(participated~0+X.assigned)
# get the fitted values and residuals from stage 1
participatedhat = fitted(stage1)
Vhat1 = resid(stage1)
instrumentcoef = stage1$coef[k]
# ------   STAGE 2   -------- #
# take the fitted values from stage 1 and
# regress those to get the fitted values for stage 2
Xhat = cbind(X.assigned[,-k],participatedhat)
stage2 <- lm(y~0+Xhat)
stage2fitted = fitted(stage2)
twoSLSdelta = stage2$coef[k]
# ------------------- QUESTION 2 -------------- #
XtX = t(Xhat) %*% Xhat
Bhat = 1/n * XtX # bread
Vhat2 = resid(stage2) # residuals
Mhat = matrix(0, k, k)
for (i in 1:n) {
Mhat = Mhat + Vhat2[i]^2 * Xhat[i,] %*% t(Xhat[i,])
}
Mhat = 1/n * Mhat  # meat
SIGMAhat = solve(Bhat) %*% Mhat %*% solve(Bhat) # HC estimate of covariance matrix
se = sqrt(diag(SIGMAhat)/n) # HC standard error
sedelta = se[k]
# ------------------- QUESTION 3 -------------- #
delta = 0
t = (twoSLSdelta-delta)/(sedelta) # t-stat for hypothesis test
pvalue = 2 * (1-pnorm(abs(t))) # p-value for hypothesis test
# ------------------- QUESTION 4 -------------- #
# 1. ---- unrestricted model ---- #
unrmodel = lm(y~0+Xhat)
Uhatunr = resid(unrmodel)
# 2. ------restricted model ----- #
rmodel = lm(y~0+Xhat[,-k]) # stage 1 OLS
YhatR = fitted(rmodel) # stage 1 fitted values of the rmodel
UhatR = resid(rmodel) # stage 1 residuals from the the rmodel
#bootstrapstage2 <- lm(y~0+Xhat[,-k]+participatedhatboot) # stage 2 OLS
#YhatR = fitted(bootstrapstage2) # stage 2 fitted values
#UhatR = resid(bootstrapstage2) # stage 2 residuals
# 3.& 4.  ----- Re-sampling ----- #
B=1999
tstar=rep(0:B)
for (b in 1:B){
W=rbinom(n,1,p=0.5)
W[W==0]=-1
Vhat1star = W * Vhat1 # BS stage 1 resid
UhatRstar = W * UhatR # BS stage 2 resid
YstarR = YhatR + UhatRstar # BS GPA = stage 2 fitted + stage 2 resid
Xstarboot = cbind(1, Z, participatedhat)
bootmodel = lm(YstarR~0+Xstarboot+Vhat1star) # bootstrap sample
bootdeltahat = bootmodel$coefficients[k] # bootstrap estimate of delta
XtXboot = t(Xstarboot) %*% Xstarboot
Bhatboot = 1/n * XtXboot # bread
Mhatboot = matrix(0, k, k)
for (i in 1:n) {
Mhatboot = Mhatboot + UhatRstar[i]^2 * Xstarboot[i,] %*% t(Xstarboot[i,])
}
Mhatboot = 1/n * Mhatboot  # meat
SIGMAhatboot = solve(Bhatboot) %*% Mhatboot %*% solve(Bhatboot) # HC estimate of covariance matrix
seboot = sqrt(diag(SIGMAhatboot)/n) # HC standard error
sestardeltaboot = seboot[k]
tstar[b]=(bootdeltahat)/sestardeltaboot
}
gstar.t = 1/B * sum(tstar<=t)
pboot =  2 * min(gstar.t, 1-gstar.t)
# Clear Memory and Import Libraries
rm(list=ls())
library(ggplot2)
library(tidyverse)
# Importing Data
headers <- as.data.frame(read.table(file="employment.csv",
header=FALSE, sep=',', skip=8, nrows=1, as.is=TRUE))
df <- read.table(file="employment.csv", header=FALSE, sep=',',
skip=10, nrows=253)
colnames(df) <- headers
attach(df)
# Exploratory Data Analysis on Both Genders
df_both = df[,0:23]
ref_period= unlist(df_both['Reference period']) #`Reference period`
y_both = unlist(df_both['15 years and over'])#as.factor(df_both[2])
ggplot(data=df_both, mapping = aes(x=x_both, y=y_both))+geom_point()
# Exploratory Data Analysis on Male
df_male = cbind(df[,0],df[,24:45])
#x_male =
#y_male =
# Exploratory Data Analysis on Female
df_female = cbind(df[,0],df[,46:67])
#x_female =
#y_female =
setwd("C:/Users/ezana/Desktop/SCHOOL/Graduate/Master's Research Paper/Data")
# Clear Memory and Import Libraries
rm(list=ls())
library(ggplot2)
library(tidyverse)
# Importing Data
headers <- as.data.frame(read.table(file="employment.csv",
header=FALSE, sep=',', skip=8, nrows=1, as.is=TRUE))
df <- read.table(file="employment.csv", header=FALSE, sep=',',
skip=10, nrows=253)
colnames(df) <- headers
attach(df)
# Exploratory Data Analysis on Both Genders
df_both = df[,0:23]
ref_period= unlist(df_both['Reference period']) #`Reference period`
y_both = unlist(df_both['15 years and over'])#as.factor(df_both[2])
ggplot(data=df_both, mapping = aes(x=x_both, y=y_both))+geom_point()
# Exploratory Data Analysis on Male
df_male = cbind(df[,0],df[,24:45])
#x_male =
#y_male =
# Exploratory Data Analysis on Female
df_female = cbind(df[,0],df[,46:67])
#x_female =
#y_female =
View(df)
ggplot(data=df_both, mapping = aes(x=ref_period), y=y_both))+geom_line()
ggplot(data=df_both, mapping = aes(x=ref_period), y=y_both)+geom_line()
?geom_line
View(df_female)
ggplot(data=df_both, mapping = aes(x=ref_period, y=y_both)+geom_line()
ggplot(data=df_both, mapping = aes(x=ref_period, y=y_both)+geom_line())
library(zoo)
headers <- as.data.frame(read.table(file="LICO.csv", header=FALSE, sep=',', skip=8, nrows=1, as.is=TRUE))
df <- read.table(file="employment.csv", header=FALSE, sep=',', skip=10, nrows=253)
colnames(df) <- headers
attach(df)
View(df)
rm(list=ls())
library(tidyverse)
library(zoo)
# Import Data
headers <- as.data.frame(read.table(file="LICO.csv", header=FALSE, sep=',', skip=8, nrows=1, as.is=TRUE))
df <- read.table(file="LICO.csv", header=FALSE, sep=',', skip=10, nrows=253)
colnames(df) <- headers
attach(df)
df <- read.table(file="LICO.csv", header=FALSE, sep=',', skip=9, nrows=20)
colnames(df) <- headers
attach(df)
View(df)
